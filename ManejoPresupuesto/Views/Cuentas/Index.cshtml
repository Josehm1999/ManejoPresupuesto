@model IEnumerable<IndiceCuentasViewModel>

@{
    ViewData["Title"] = "Cuentas";

    string FormatearBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string ObtenerClaseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";

    }
}

<section id="cta" class="bg-brightRed">
    <!-- Flex Container -->
    <div
        class="container flex flex-col items-center justify-between px-6 py-24 mx-auto space-y-12 md:py-12 md:flex-row md:space-y-0">
        <!-- Heading -->
        <h2 class="text-5xl font-bold text-center text-white md:text-4xl md:max-w-xl md:text-left">
                Cuentas
        </h2>
        <p class="md:text-3xl text-white" style="font-size: 1.5rem;">
        Manten registro a donde se van tus ingresos y en donde inviertes mediante tus cuentas contables
        </p
        <!-- Button -->
        <div>
            <a  asp-action="Crear"
                class="p-3 px-6 pt-2 text-brightRed bg-white rounded-full shadow-2xl baseline hover:bg-gray-900">Crear nuevo</a>
        </div>
    </div>
</section>
<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            @FormatearBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="pasivo">
            @FormatearBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @FormatearBalance(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas">
    @foreach (var tipoCuenta in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="cabeceraUno">
                @{
                    var id = tipoCuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var claseTipoCuenta = ObtenerClaseBalance(tipoCuenta.Balance);
                }
                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                    data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <span><strong>@tipoCuenta.TipoCuenta</strong></span>
                        <span class="@claseTipoCuenta">@FormatearBalance(tipoCuenta.Balance)</span>
                    </span>
                </button>
            </h2>
            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta in tipoCuenta.Cuentas)
                        {
                            var claseCuenta = ObtenerClaseBalance(cuenta.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong><a asp-action="Detalle" asp-route-id="@cuenta.Id">@cuenta.Nombre</a></strong>
                                <a asp-action="Editar" asp-route-id="@cuenta.Id" class="btn-primary btn">
                                    <i class="bi-pencil-fill"></i>
                                </a>
                                <a asp-action="Borrar" asp-route-id="@cuenta.Id" class="btn-danger btn">
                                    <i class="bi-trash-fill"></i>
                                </a>
                                </span>
                                <span class="@claseCuenta">@FormatearBalance(cuenta.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>
