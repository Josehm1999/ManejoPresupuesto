@model IEnumerable<TipoCuenta>

    @{
    ViewData["Title"] = "Tipos Cuentas";
    }

    <section id="cta" class="bg-brightRed">
        <!-- Flex Container -->
        <div
            class="container flex flex-col items-center justify-between px-6 py-24 mx-auto space-y-12 md:py-12 md:flex-row md:space-y-0">
            <!-- Heading -->
            <h2 class="text-5xl font-bold text-center text-white md:text-4xl md:max-w-xl md:text-left">
               Tipo Cuentas
            </h2>
            <p class="md:text-3xl text-white" style="font-size: 1.2rem;">
                El tipo de cuenta se refiere a cómo podemos agrupar cuentas.
                Ejemplos: Préstamos, tarjetas de crédito, etc. </p> <!-- Button -->
            <div>
                <a asp-action="Crear"
                    class="p-3 px-6 pt-2 text-brightRed bg-white rounded-full shadow-2xl baseline hover:bg-gray-900">Crear
                    nuevo</a>
            </div>
        </div>
    </section>
    <table class="table">
        <thead>
            <tr>
                <th>Acciones</th>
                <th>Nombre</th>
            </tr>
        </thead>
        <tbody id="reordenable">
            @foreach (var tipoCuenta in Model)
            {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="ids" />
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>

            </tr>
            }
        </tbody>
    </table>

    @section Scripts {
    <script>

        const urlOrdenar = '@Url.Action("ordenar")';

        $(function () {
            $("#reordenable").sortable({
                stop: async function (e, ui) {
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes() {
                const ids = obtenerIdsDeElementos();
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos() {
                const ids = $(".ids").map(function () {
                    return $(this).val();
                }).get();

                return ids;
            }

            async function enviarIdsAlBackend(ids) {
                var data = JSON.stringify(ids);

                await fetch(urlOrdenar, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            }
        })
    </script>
    }
